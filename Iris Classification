import numpy as np 
import pandas as pd
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix

data = pd.read_csv("iris.csv") # for manual csv file
data = load_iris() #from prebuilt dataset in sklearn

# Displaying the first few rows of the dataset
print(data.head(8))

# Remove the Id column from the dataset
data = data.drop("Id", axis=1)

# Dispplaying null values 
print(data.isnull().sum())

# Display information about the data
print(data.info())

# Display statistical summary of the dataset
print(data.describe())

# Data visualization
sns.countplot(data["Species"])  # Countplot for target variable
plt.show()  # Display the countplot

sns.pairplot(data=data.iloc[:,:4], hue=data.iloc[:,4])
sns.heatmap(data.corr(), annot=True)  # Heatmap for correlation matrix
plt.show()  # Display the heatmap

# Data preprocessing
X = data.data
y = data.target_names[data.target]

# data transformation from categorical labels to numerical values
le = LabelEncoder()
y = le.fit_transform(y)

#data splitting
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# data scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# model training
model = LogisticRegression()
model.fit(X_train, y_train)

# model prediction
y_pred = model.predict(X_test)

# model evaluation
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

report = classification_report(y_test, y_pred)
print("Classification Report:", report)

conf_matrix = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:",conf_matrix)
